# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = beaumont$(EXEEXT) malik$(EXEEXT) delta$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_beaumont_OBJECTS = beaumont-main_beaumont.$(OBJEXT) \
	beaumont-algorithm.$(OBJEXT) \
	beaumont-algorithm_basic.$(OBJEXT) \
	beaumont-algorithm_malik.$(OBJEXT) \
	beaumont-algorithm_MxM.$(OBJEXT) \
	beaumont-algorithm_taulop_pbc.$(OBJEXT) \
	beaumont-algorithm_taulop_pbr.$(OBJEXT) \
	beaumont-algorithm_W1D.$(OBJEXT) \
	beaumont-algorithm_W2D.$(OBJEXT) \
	beaumont-arrangement.$(OBJEXT) beaumont-column.$(OBJEXT) \
	beaumont-cost.$(OBJEXT) beaumont-heuristic_beaumont.$(OBJEXT) \
	beaumont-heuristic_malik.$(OBJEXT) \
	beaumont-heuristic.$(OBJEXT) beaumont-matrix.$(OBJEXT) \
	beaumont-rectangle.$(OBJEXT)
beaumont_OBJECTS = $(am_beaumont_OBJECTS)
beaumont_DEPENDENCIES =
beaumont_LINK = $(CXXLD) $(beaumont_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_delta_OBJECTS = delta-main_delta.$(OBJEXT) \
	delta-algorithm.$(OBJEXT) delta-algorithm_basic.$(OBJEXT) \
	delta-algorithm_malik.$(OBJEXT) delta-algorithm_MxM.$(OBJEXT) \
	delta-algorithm_taulop_pbc.$(OBJEXT) \
	delta-algorithm_taulop_pbr.$(OBJEXT) \
	delta-algorithm_W1D.$(OBJEXT) delta-algorithm_W2D.$(OBJEXT) \
	delta-arrangement.$(OBJEXT) delta-column.$(OBJEXT) \
	delta-cost.$(OBJEXT) delta-heuristic_beaumont.$(OBJEXT) \
	delta-heuristic_malik.$(OBJEXT) delta-heuristic.$(OBJEXT) \
	delta-matrix.$(OBJEXT) delta-rectangle.$(OBJEXT)
delta_OBJECTS = $(am_delta_OBJECTS)
delta_DEPENDENCIES =
delta_LINK = $(CXXLD) $(delta_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_malik_OBJECTS = malik-main_malik.$(OBJEXT) \
	malik-algorithm.$(OBJEXT) malik-algorithm_basic.$(OBJEXT) \
	malik-algorithm_malik.$(OBJEXT) malik-algorithm_MxM.$(OBJEXT) \
	malik-algorithm_taulop_pbc.$(OBJEXT) \
	malik-algorithm_taulop_pbr.$(OBJEXT) \
	malik-algorithm_W1D.$(OBJEXT) malik-algorithm_W2D.$(OBJEXT) \
	malik-arrangement.$(OBJEXT) malik-column.$(OBJEXT) \
	malik-cost.$(OBJEXT) malik-heuristic_beaumont.$(OBJEXT) \
	malik-heuristic_malik.$(OBJEXT) malik-heuristic.$(OBJEXT) \
	malik-matrix.$(OBJEXT) malik-rectangle.$(OBJEXT)
malik_OBJECTS = $(am_malik_OBJECTS)
malik_DEPENDENCIES =
malik_LINK = $(CXXLD) $(malik_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(beaumont_SOURCES) $(delta_SOURCES) $(malik_SOURCES)
DIST_SOURCES = $(beaumont_SOURCES) $(delta_SOURCES) $(malik_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# what flags you want to pass to the C compiler & linker
AM_CXXFLAGS = -I$(top_srcdir)/include  --pedantic -Wall -std=c++11 -O2
AM_LDFLAGS = -L$(with_taulop)/lib

######   BEAUMONT 
beaumont_SOURCES = main_beaumont.cpp  algorithm.cpp  algorithm_basic.cpp  algorithm_malik.cpp  algorithm_MxM.cpp  algorithm_taulop_pbc.cpp  algorithm_taulop_pbr.cpp  algorithm_W1D.cpp  algorithm_W2D.cpp arrangement.cpp column.cpp cost.cpp heuristic_beaumont.cpp heuristic_malik.cpp heuristic.cpp matrix.cpp rectangle.cpp 
beaumont_CXXFLAGS = $(AM_CXXFLAGS) -I$(includedir)
beaumont_LDADD = -ltaulop

######   MALIK
malik_SOURCES = main_malik.cpp  algorithm.cpp  algorithm_basic.cpp  algorithm_malik.cpp  algorithm_MxM.cpp  algorithm_taulop_pbc.cpp  algorithm_taulop_pbr.cpp  algorithm_W1D.cpp  algorithm_W2D.cpp arrangement.cpp column.cpp cost.cpp heuristic_beaumont.cpp heuristic_malik.cpp heuristic.cpp matrix.cpp rectangle.cpp 
malik_CXXFLAGS = $(AM_CXXFLAGS) -I$(includedir)
malik_LDADD = -ltaulop

######   DELTA
delta_SOURCES = main_delta.cpp  algorithm.cpp  algorithm_basic.cpp  algorithm_malik.cpp  algorithm_MxM.cpp  algorithm_taulop_pbc.cpp  algorithm_taulop_pbr.cpp  algorithm_W1D.cpp  algorithm_W2D.cpp arrangement.cpp column.cpp cost.cpp heuristic_beaumont.cpp heuristic_malik.cpp heuristic.cpp matrix.cpp rectangle.cpp 
delta_CXXFLAGS = $(AM_CXXFLAGS) -I$(includedir)
delta_LDADD = -ltaulop
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

beaumont$(EXEEXT): $(beaumont_OBJECTS) $(beaumont_DEPENDENCIES) $(EXTRA_beaumont_DEPENDENCIES) 
	@rm -f beaumont$(EXEEXT)
	$(AM_V_CXXLD)$(beaumont_LINK) $(beaumont_OBJECTS) $(beaumont_LDADD) $(LIBS)

delta$(EXEEXT): $(delta_OBJECTS) $(delta_DEPENDENCIES) $(EXTRA_delta_DEPENDENCIES) 
	@rm -f delta$(EXEEXT)
	$(AM_V_CXXLD)$(delta_LINK) $(delta_OBJECTS) $(delta_LDADD) $(LIBS)

malik$(EXEEXT): $(malik_OBJECTS) $(malik_DEPENDENCIES) $(EXTRA_malik_DEPENDENCIES) 
	@rm -f malik$(EXEEXT)
	$(AM_V_CXXLD)$(malik_LINK) $(malik_OBJECTS) $(malik_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beaumont-algorithm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beaumont-algorithm_MxM.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beaumont-algorithm_W1D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beaumont-algorithm_W2D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beaumont-algorithm_basic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beaumont-algorithm_malik.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beaumont-algorithm_taulop_pbc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beaumont-algorithm_taulop_pbr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beaumont-arrangement.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beaumont-column.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beaumont-cost.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beaumont-heuristic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beaumont-heuristic_beaumont.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beaumont-heuristic_malik.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beaumont-main_beaumont.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beaumont-matrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beaumont-rectangle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/delta-algorithm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/delta-algorithm_MxM.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/delta-algorithm_W1D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/delta-algorithm_W2D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/delta-algorithm_basic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/delta-algorithm_malik.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/delta-algorithm_taulop_pbc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/delta-algorithm_taulop_pbr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/delta-arrangement.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/delta-column.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/delta-cost.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/delta-heuristic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/delta-heuristic_beaumont.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/delta-heuristic_malik.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/delta-main_delta.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/delta-matrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/delta-rectangle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malik-algorithm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malik-algorithm_MxM.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malik-algorithm_W1D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malik-algorithm_W2D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malik-algorithm_basic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malik-algorithm_malik.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malik-algorithm_taulop_pbc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malik-algorithm_taulop_pbr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malik-arrangement.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malik-column.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malik-cost.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malik-heuristic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malik-heuristic_beaumont.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malik-heuristic_malik.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malik-main_malik.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malik-matrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malik-rectangle.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

beaumont-main_beaumont.o: main_beaumont.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-main_beaumont.o -MD -MP -MF $(DEPDIR)/beaumont-main_beaumont.Tpo -c -o beaumont-main_beaumont.o `test -f 'main_beaumont.cpp' || echo '$(srcdir)/'`main_beaumont.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-main_beaumont.Tpo $(DEPDIR)/beaumont-main_beaumont.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='main_beaumont.cpp' object='beaumont-main_beaumont.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-main_beaumont.o `test -f 'main_beaumont.cpp' || echo '$(srcdir)/'`main_beaumont.cpp

beaumont-main_beaumont.obj: main_beaumont.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-main_beaumont.obj -MD -MP -MF $(DEPDIR)/beaumont-main_beaumont.Tpo -c -o beaumont-main_beaumont.obj `if test -f 'main_beaumont.cpp'; then $(CYGPATH_W) 'main_beaumont.cpp'; else $(CYGPATH_W) '$(srcdir)/main_beaumont.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-main_beaumont.Tpo $(DEPDIR)/beaumont-main_beaumont.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='main_beaumont.cpp' object='beaumont-main_beaumont.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-main_beaumont.obj `if test -f 'main_beaumont.cpp'; then $(CYGPATH_W) 'main_beaumont.cpp'; else $(CYGPATH_W) '$(srcdir)/main_beaumont.cpp'; fi`

beaumont-algorithm.o: algorithm.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-algorithm.o -MD -MP -MF $(DEPDIR)/beaumont-algorithm.Tpo -c -o beaumont-algorithm.o `test -f 'algorithm.cpp' || echo '$(srcdir)/'`algorithm.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-algorithm.Tpo $(DEPDIR)/beaumont-algorithm.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm.cpp' object='beaumont-algorithm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-algorithm.o `test -f 'algorithm.cpp' || echo '$(srcdir)/'`algorithm.cpp

beaumont-algorithm.obj: algorithm.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-algorithm.obj -MD -MP -MF $(DEPDIR)/beaumont-algorithm.Tpo -c -o beaumont-algorithm.obj `if test -f 'algorithm.cpp'; then $(CYGPATH_W) 'algorithm.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-algorithm.Tpo $(DEPDIR)/beaumont-algorithm.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm.cpp' object='beaumont-algorithm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-algorithm.obj `if test -f 'algorithm.cpp'; then $(CYGPATH_W) 'algorithm.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm.cpp'; fi`

beaumont-algorithm_basic.o: algorithm_basic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-algorithm_basic.o -MD -MP -MF $(DEPDIR)/beaumont-algorithm_basic.Tpo -c -o beaumont-algorithm_basic.o `test -f 'algorithm_basic.cpp' || echo '$(srcdir)/'`algorithm_basic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-algorithm_basic.Tpo $(DEPDIR)/beaumont-algorithm_basic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_basic.cpp' object='beaumont-algorithm_basic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-algorithm_basic.o `test -f 'algorithm_basic.cpp' || echo '$(srcdir)/'`algorithm_basic.cpp

beaumont-algorithm_basic.obj: algorithm_basic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-algorithm_basic.obj -MD -MP -MF $(DEPDIR)/beaumont-algorithm_basic.Tpo -c -o beaumont-algorithm_basic.obj `if test -f 'algorithm_basic.cpp'; then $(CYGPATH_W) 'algorithm_basic.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_basic.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-algorithm_basic.Tpo $(DEPDIR)/beaumont-algorithm_basic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_basic.cpp' object='beaumont-algorithm_basic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-algorithm_basic.obj `if test -f 'algorithm_basic.cpp'; then $(CYGPATH_W) 'algorithm_basic.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_basic.cpp'; fi`

beaumont-algorithm_malik.o: algorithm_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-algorithm_malik.o -MD -MP -MF $(DEPDIR)/beaumont-algorithm_malik.Tpo -c -o beaumont-algorithm_malik.o `test -f 'algorithm_malik.cpp' || echo '$(srcdir)/'`algorithm_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-algorithm_malik.Tpo $(DEPDIR)/beaumont-algorithm_malik.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_malik.cpp' object='beaumont-algorithm_malik.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-algorithm_malik.o `test -f 'algorithm_malik.cpp' || echo '$(srcdir)/'`algorithm_malik.cpp

beaumont-algorithm_malik.obj: algorithm_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-algorithm_malik.obj -MD -MP -MF $(DEPDIR)/beaumont-algorithm_malik.Tpo -c -o beaumont-algorithm_malik.obj `if test -f 'algorithm_malik.cpp'; then $(CYGPATH_W) 'algorithm_malik.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_malik.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-algorithm_malik.Tpo $(DEPDIR)/beaumont-algorithm_malik.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_malik.cpp' object='beaumont-algorithm_malik.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-algorithm_malik.obj `if test -f 'algorithm_malik.cpp'; then $(CYGPATH_W) 'algorithm_malik.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_malik.cpp'; fi`

beaumont-algorithm_MxM.o: algorithm_MxM.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-algorithm_MxM.o -MD -MP -MF $(DEPDIR)/beaumont-algorithm_MxM.Tpo -c -o beaumont-algorithm_MxM.o `test -f 'algorithm_MxM.cpp' || echo '$(srcdir)/'`algorithm_MxM.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-algorithm_MxM.Tpo $(DEPDIR)/beaumont-algorithm_MxM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_MxM.cpp' object='beaumont-algorithm_MxM.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-algorithm_MxM.o `test -f 'algorithm_MxM.cpp' || echo '$(srcdir)/'`algorithm_MxM.cpp

beaumont-algorithm_MxM.obj: algorithm_MxM.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-algorithm_MxM.obj -MD -MP -MF $(DEPDIR)/beaumont-algorithm_MxM.Tpo -c -o beaumont-algorithm_MxM.obj `if test -f 'algorithm_MxM.cpp'; then $(CYGPATH_W) 'algorithm_MxM.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_MxM.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-algorithm_MxM.Tpo $(DEPDIR)/beaumont-algorithm_MxM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_MxM.cpp' object='beaumont-algorithm_MxM.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-algorithm_MxM.obj `if test -f 'algorithm_MxM.cpp'; then $(CYGPATH_W) 'algorithm_MxM.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_MxM.cpp'; fi`

beaumont-algorithm_taulop_pbc.o: algorithm_taulop_pbc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-algorithm_taulop_pbc.o -MD -MP -MF $(DEPDIR)/beaumont-algorithm_taulop_pbc.Tpo -c -o beaumont-algorithm_taulop_pbc.o `test -f 'algorithm_taulop_pbc.cpp' || echo '$(srcdir)/'`algorithm_taulop_pbc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-algorithm_taulop_pbc.Tpo $(DEPDIR)/beaumont-algorithm_taulop_pbc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_taulop_pbc.cpp' object='beaumont-algorithm_taulop_pbc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-algorithm_taulop_pbc.o `test -f 'algorithm_taulop_pbc.cpp' || echo '$(srcdir)/'`algorithm_taulop_pbc.cpp

beaumont-algorithm_taulop_pbc.obj: algorithm_taulop_pbc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-algorithm_taulop_pbc.obj -MD -MP -MF $(DEPDIR)/beaumont-algorithm_taulop_pbc.Tpo -c -o beaumont-algorithm_taulop_pbc.obj `if test -f 'algorithm_taulop_pbc.cpp'; then $(CYGPATH_W) 'algorithm_taulop_pbc.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_taulop_pbc.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-algorithm_taulop_pbc.Tpo $(DEPDIR)/beaumont-algorithm_taulop_pbc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_taulop_pbc.cpp' object='beaumont-algorithm_taulop_pbc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-algorithm_taulop_pbc.obj `if test -f 'algorithm_taulop_pbc.cpp'; then $(CYGPATH_W) 'algorithm_taulop_pbc.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_taulop_pbc.cpp'; fi`

beaumont-algorithm_taulop_pbr.o: algorithm_taulop_pbr.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-algorithm_taulop_pbr.o -MD -MP -MF $(DEPDIR)/beaumont-algorithm_taulop_pbr.Tpo -c -o beaumont-algorithm_taulop_pbr.o `test -f 'algorithm_taulop_pbr.cpp' || echo '$(srcdir)/'`algorithm_taulop_pbr.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-algorithm_taulop_pbr.Tpo $(DEPDIR)/beaumont-algorithm_taulop_pbr.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_taulop_pbr.cpp' object='beaumont-algorithm_taulop_pbr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-algorithm_taulop_pbr.o `test -f 'algorithm_taulop_pbr.cpp' || echo '$(srcdir)/'`algorithm_taulop_pbr.cpp

beaumont-algorithm_taulop_pbr.obj: algorithm_taulop_pbr.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-algorithm_taulop_pbr.obj -MD -MP -MF $(DEPDIR)/beaumont-algorithm_taulop_pbr.Tpo -c -o beaumont-algorithm_taulop_pbr.obj `if test -f 'algorithm_taulop_pbr.cpp'; then $(CYGPATH_W) 'algorithm_taulop_pbr.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_taulop_pbr.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-algorithm_taulop_pbr.Tpo $(DEPDIR)/beaumont-algorithm_taulop_pbr.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_taulop_pbr.cpp' object='beaumont-algorithm_taulop_pbr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-algorithm_taulop_pbr.obj `if test -f 'algorithm_taulop_pbr.cpp'; then $(CYGPATH_W) 'algorithm_taulop_pbr.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_taulop_pbr.cpp'; fi`

beaumont-algorithm_W1D.o: algorithm_W1D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-algorithm_W1D.o -MD -MP -MF $(DEPDIR)/beaumont-algorithm_W1D.Tpo -c -o beaumont-algorithm_W1D.o `test -f 'algorithm_W1D.cpp' || echo '$(srcdir)/'`algorithm_W1D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-algorithm_W1D.Tpo $(DEPDIR)/beaumont-algorithm_W1D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_W1D.cpp' object='beaumont-algorithm_W1D.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-algorithm_W1D.o `test -f 'algorithm_W1D.cpp' || echo '$(srcdir)/'`algorithm_W1D.cpp

beaumont-algorithm_W1D.obj: algorithm_W1D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-algorithm_W1D.obj -MD -MP -MF $(DEPDIR)/beaumont-algorithm_W1D.Tpo -c -o beaumont-algorithm_W1D.obj `if test -f 'algorithm_W1D.cpp'; then $(CYGPATH_W) 'algorithm_W1D.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_W1D.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-algorithm_W1D.Tpo $(DEPDIR)/beaumont-algorithm_W1D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_W1D.cpp' object='beaumont-algorithm_W1D.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-algorithm_W1D.obj `if test -f 'algorithm_W1D.cpp'; then $(CYGPATH_W) 'algorithm_W1D.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_W1D.cpp'; fi`

beaumont-algorithm_W2D.o: algorithm_W2D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-algorithm_W2D.o -MD -MP -MF $(DEPDIR)/beaumont-algorithm_W2D.Tpo -c -o beaumont-algorithm_W2D.o `test -f 'algorithm_W2D.cpp' || echo '$(srcdir)/'`algorithm_W2D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-algorithm_W2D.Tpo $(DEPDIR)/beaumont-algorithm_W2D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_W2D.cpp' object='beaumont-algorithm_W2D.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-algorithm_W2D.o `test -f 'algorithm_W2D.cpp' || echo '$(srcdir)/'`algorithm_W2D.cpp

beaumont-algorithm_W2D.obj: algorithm_W2D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-algorithm_W2D.obj -MD -MP -MF $(DEPDIR)/beaumont-algorithm_W2D.Tpo -c -o beaumont-algorithm_W2D.obj `if test -f 'algorithm_W2D.cpp'; then $(CYGPATH_W) 'algorithm_W2D.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_W2D.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-algorithm_W2D.Tpo $(DEPDIR)/beaumont-algorithm_W2D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_W2D.cpp' object='beaumont-algorithm_W2D.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-algorithm_W2D.obj `if test -f 'algorithm_W2D.cpp'; then $(CYGPATH_W) 'algorithm_W2D.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_W2D.cpp'; fi`

beaumont-arrangement.o: arrangement.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-arrangement.o -MD -MP -MF $(DEPDIR)/beaumont-arrangement.Tpo -c -o beaumont-arrangement.o `test -f 'arrangement.cpp' || echo '$(srcdir)/'`arrangement.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-arrangement.Tpo $(DEPDIR)/beaumont-arrangement.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='arrangement.cpp' object='beaumont-arrangement.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-arrangement.o `test -f 'arrangement.cpp' || echo '$(srcdir)/'`arrangement.cpp

beaumont-arrangement.obj: arrangement.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-arrangement.obj -MD -MP -MF $(DEPDIR)/beaumont-arrangement.Tpo -c -o beaumont-arrangement.obj `if test -f 'arrangement.cpp'; then $(CYGPATH_W) 'arrangement.cpp'; else $(CYGPATH_W) '$(srcdir)/arrangement.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-arrangement.Tpo $(DEPDIR)/beaumont-arrangement.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='arrangement.cpp' object='beaumont-arrangement.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-arrangement.obj `if test -f 'arrangement.cpp'; then $(CYGPATH_W) 'arrangement.cpp'; else $(CYGPATH_W) '$(srcdir)/arrangement.cpp'; fi`

beaumont-column.o: column.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-column.o -MD -MP -MF $(DEPDIR)/beaumont-column.Tpo -c -o beaumont-column.o `test -f 'column.cpp' || echo '$(srcdir)/'`column.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-column.Tpo $(DEPDIR)/beaumont-column.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='column.cpp' object='beaumont-column.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-column.o `test -f 'column.cpp' || echo '$(srcdir)/'`column.cpp

beaumont-column.obj: column.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-column.obj -MD -MP -MF $(DEPDIR)/beaumont-column.Tpo -c -o beaumont-column.obj `if test -f 'column.cpp'; then $(CYGPATH_W) 'column.cpp'; else $(CYGPATH_W) '$(srcdir)/column.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-column.Tpo $(DEPDIR)/beaumont-column.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='column.cpp' object='beaumont-column.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-column.obj `if test -f 'column.cpp'; then $(CYGPATH_W) 'column.cpp'; else $(CYGPATH_W) '$(srcdir)/column.cpp'; fi`

beaumont-cost.o: cost.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-cost.o -MD -MP -MF $(DEPDIR)/beaumont-cost.Tpo -c -o beaumont-cost.o `test -f 'cost.cpp' || echo '$(srcdir)/'`cost.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-cost.Tpo $(DEPDIR)/beaumont-cost.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cost.cpp' object='beaumont-cost.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-cost.o `test -f 'cost.cpp' || echo '$(srcdir)/'`cost.cpp

beaumont-cost.obj: cost.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-cost.obj -MD -MP -MF $(DEPDIR)/beaumont-cost.Tpo -c -o beaumont-cost.obj `if test -f 'cost.cpp'; then $(CYGPATH_W) 'cost.cpp'; else $(CYGPATH_W) '$(srcdir)/cost.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-cost.Tpo $(DEPDIR)/beaumont-cost.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cost.cpp' object='beaumont-cost.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-cost.obj `if test -f 'cost.cpp'; then $(CYGPATH_W) 'cost.cpp'; else $(CYGPATH_W) '$(srcdir)/cost.cpp'; fi`

beaumont-heuristic_beaumont.o: heuristic_beaumont.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-heuristic_beaumont.o -MD -MP -MF $(DEPDIR)/beaumont-heuristic_beaumont.Tpo -c -o beaumont-heuristic_beaumont.o `test -f 'heuristic_beaumont.cpp' || echo '$(srcdir)/'`heuristic_beaumont.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-heuristic_beaumont.Tpo $(DEPDIR)/beaumont-heuristic_beaumont.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heuristic_beaumont.cpp' object='beaumont-heuristic_beaumont.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-heuristic_beaumont.o `test -f 'heuristic_beaumont.cpp' || echo '$(srcdir)/'`heuristic_beaumont.cpp

beaumont-heuristic_beaumont.obj: heuristic_beaumont.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-heuristic_beaumont.obj -MD -MP -MF $(DEPDIR)/beaumont-heuristic_beaumont.Tpo -c -o beaumont-heuristic_beaumont.obj `if test -f 'heuristic_beaumont.cpp'; then $(CYGPATH_W) 'heuristic_beaumont.cpp'; else $(CYGPATH_W) '$(srcdir)/heuristic_beaumont.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-heuristic_beaumont.Tpo $(DEPDIR)/beaumont-heuristic_beaumont.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heuristic_beaumont.cpp' object='beaumont-heuristic_beaumont.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-heuristic_beaumont.obj `if test -f 'heuristic_beaumont.cpp'; then $(CYGPATH_W) 'heuristic_beaumont.cpp'; else $(CYGPATH_W) '$(srcdir)/heuristic_beaumont.cpp'; fi`

beaumont-heuristic_malik.o: heuristic_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-heuristic_malik.o -MD -MP -MF $(DEPDIR)/beaumont-heuristic_malik.Tpo -c -o beaumont-heuristic_malik.o `test -f 'heuristic_malik.cpp' || echo '$(srcdir)/'`heuristic_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-heuristic_malik.Tpo $(DEPDIR)/beaumont-heuristic_malik.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heuristic_malik.cpp' object='beaumont-heuristic_malik.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-heuristic_malik.o `test -f 'heuristic_malik.cpp' || echo '$(srcdir)/'`heuristic_malik.cpp

beaumont-heuristic_malik.obj: heuristic_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-heuristic_malik.obj -MD -MP -MF $(DEPDIR)/beaumont-heuristic_malik.Tpo -c -o beaumont-heuristic_malik.obj `if test -f 'heuristic_malik.cpp'; then $(CYGPATH_W) 'heuristic_malik.cpp'; else $(CYGPATH_W) '$(srcdir)/heuristic_malik.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-heuristic_malik.Tpo $(DEPDIR)/beaumont-heuristic_malik.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heuristic_malik.cpp' object='beaumont-heuristic_malik.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-heuristic_malik.obj `if test -f 'heuristic_malik.cpp'; then $(CYGPATH_W) 'heuristic_malik.cpp'; else $(CYGPATH_W) '$(srcdir)/heuristic_malik.cpp'; fi`

beaumont-heuristic.o: heuristic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-heuristic.o -MD -MP -MF $(DEPDIR)/beaumont-heuristic.Tpo -c -o beaumont-heuristic.o `test -f 'heuristic.cpp' || echo '$(srcdir)/'`heuristic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-heuristic.Tpo $(DEPDIR)/beaumont-heuristic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heuristic.cpp' object='beaumont-heuristic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-heuristic.o `test -f 'heuristic.cpp' || echo '$(srcdir)/'`heuristic.cpp

beaumont-heuristic.obj: heuristic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-heuristic.obj -MD -MP -MF $(DEPDIR)/beaumont-heuristic.Tpo -c -o beaumont-heuristic.obj `if test -f 'heuristic.cpp'; then $(CYGPATH_W) 'heuristic.cpp'; else $(CYGPATH_W) '$(srcdir)/heuristic.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-heuristic.Tpo $(DEPDIR)/beaumont-heuristic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heuristic.cpp' object='beaumont-heuristic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-heuristic.obj `if test -f 'heuristic.cpp'; then $(CYGPATH_W) 'heuristic.cpp'; else $(CYGPATH_W) '$(srcdir)/heuristic.cpp'; fi`

beaumont-matrix.o: matrix.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-matrix.o -MD -MP -MF $(DEPDIR)/beaumont-matrix.Tpo -c -o beaumont-matrix.o `test -f 'matrix.cpp' || echo '$(srcdir)/'`matrix.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-matrix.Tpo $(DEPDIR)/beaumont-matrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='matrix.cpp' object='beaumont-matrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-matrix.o `test -f 'matrix.cpp' || echo '$(srcdir)/'`matrix.cpp

beaumont-matrix.obj: matrix.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-matrix.obj -MD -MP -MF $(DEPDIR)/beaumont-matrix.Tpo -c -o beaumont-matrix.obj `if test -f 'matrix.cpp'; then $(CYGPATH_W) 'matrix.cpp'; else $(CYGPATH_W) '$(srcdir)/matrix.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-matrix.Tpo $(DEPDIR)/beaumont-matrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='matrix.cpp' object='beaumont-matrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-matrix.obj `if test -f 'matrix.cpp'; then $(CYGPATH_W) 'matrix.cpp'; else $(CYGPATH_W) '$(srcdir)/matrix.cpp'; fi`

beaumont-rectangle.o: rectangle.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-rectangle.o -MD -MP -MF $(DEPDIR)/beaumont-rectangle.Tpo -c -o beaumont-rectangle.o `test -f 'rectangle.cpp' || echo '$(srcdir)/'`rectangle.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-rectangle.Tpo $(DEPDIR)/beaumont-rectangle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rectangle.cpp' object='beaumont-rectangle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-rectangle.o `test -f 'rectangle.cpp' || echo '$(srcdir)/'`rectangle.cpp

beaumont-rectangle.obj: rectangle.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -MT beaumont-rectangle.obj -MD -MP -MF $(DEPDIR)/beaumont-rectangle.Tpo -c -o beaumont-rectangle.obj `if test -f 'rectangle.cpp'; then $(CYGPATH_W) 'rectangle.cpp'; else $(CYGPATH_W) '$(srcdir)/rectangle.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/beaumont-rectangle.Tpo $(DEPDIR)/beaumont-rectangle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rectangle.cpp' object='beaumont-rectangle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(beaumont_CXXFLAGS) $(CXXFLAGS) -c -o beaumont-rectangle.obj `if test -f 'rectangle.cpp'; then $(CYGPATH_W) 'rectangle.cpp'; else $(CYGPATH_W) '$(srcdir)/rectangle.cpp'; fi`

delta-main_delta.o: main_delta.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-main_delta.o -MD -MP -MF $(DEPDIR)/delta-main_delta.Tpo -c -o delta-main_delta.o `test -f 'main_delta.cpp' || echo '$(srcdir)/'`main_delta.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-main_delta.Tpo $(DEPDIR)/delta-main_delta.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='main_delta.cpp' object='delta-main_delta.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-main_delta.o `test -f 'main_delta.cpp' || echo '$(srcdir)/'`main_delta.cpp

delta-main_delta.obj: main_delta.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-main_delta.obj -MD -MP -MF $(DEPDIR)/delta-main_delta.Tpo -c -o delta-main_delta.obj `if test -f 'main_delta.cpp'; then $(CYGPATH_W) 'main_delta.cpp'; else $(CYGPATH_W) '$(srcdir)/main_delta.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-main_delta.Tpo $(DEPDIR)/delta-main_delta.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='main_delta.cpp' object='delta-main_delta.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-main_delta.obj `if test -f 'main_delta.cpp'; then $(CYGPATH_W) 'main_delta.cpp'; else $(CYGPATH_W) '$(srcdir)/main_delta.cpp'; fi`

delta-algorithm.o: algorithm.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-algorithm.o -MD -MP -MF $(DEPDIR)/delta-algorithm.Tpo -c -o delta-algorithm.o `test -f 'algorithm.cpp' || echo '$(srcdir)/'`algorithm.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-algorithm.Tpo $(DEPDIR)/delta-algorithm.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm.cpp' object='delta-algorithm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-algorithm.o `test -f 'algorithm.cpp' || echo '$(srcdir)/'`algorithm.cpp

delta-algorithm.obj: algorithm.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-algorithm.obj -MD -MP -MF $(DEPDIR)/delta-algorithm.Tpo -c -o delta-algorithm.obj `if test -f 'algorithm.cpp'; then $(CYGPATH_W) 'algorithm.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-algorithm.Tpo $(DEPDIR)/delta-algorithm.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm.cpp' object='delta-algorithm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-algorithm.obj `if test -f 'algorithm.cpp'; then $(CYGPATH_W) 'algorithm.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm.cpp'; fi`

delta-algorithm_basic.o: algorithm_basic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-algorithm_basic.o -MD -MP -MF $(DEPDIR)/delta-algorithm_basic.Tpo -c -o delta-algorithm_basic.o `test -f 'algorithm_basic.cpp' || echo '$(srcdir)/'`algorithm_basic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-algorithm_basic.Tpo $(DEPDIR)/delta-algorithm_basic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_basic.cpp' object='delta-algorithm_basic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-algorithm_basic.o `test -f 'algorithm_basic.cpp' || echo '$(srcdir)/'`algorithm_basic.cpp

delta-algorithm_basic.obj: algorithm_basic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-algorithm_basic.obj -MD -MP -MF $(DEPDIR)/delta-algorithm_basic.Tpo -c -o delta-algorithm_basic.obj `if test -f 'algorithm_basic.cpp'; then $(CYGPATH_W) 'algorithm_basic.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_basic.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-algorithm_basic.Tpo $(DEPDIR)/delta-algorithm_basic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_basic.cpp' object='delta-algorithm_basic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-algorithm_basic.obj `if test -f 'algorithm_basic.cpp'; then $(CYGPATH_W) 'algorithm_basic.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_basic.cpp'; fi`

delta-algorithm_malik.o: algorithm_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-algorithm_malik.o -MD -MP -MF $(DEPDIR)/delta-algorithm_malik.Tpo -c -o delta-algorithm_malik.o `test -f 'algorithm_malik.cpp' || echo '$(srcdir)/'`algorithm_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-algorithm_malik.Tpo $(DEPDIR)/delta-algorithm_malik.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_malik.cpp' object='delta-algorithm_malik.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-algorithm_malik.o `test -f 'algorithm_malik.cpp' || echo '$(srcdir)/'`algorithm_malik.cpp

delta-algorithm_malik.obj: algorithm_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-algorithm_malik.obj -MD -MP -MF $(DEPDIR)/delta-algorithm_malik.Tpo -c -o delta-algorithm_malik.obj `if test -f 'algorithm_malik.cpp'; then $(CYGPATH_W) 'algorithm_malik.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_malik.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-algorithm_malik.Tpo $(DEPDIR)/delta-algorithm_malik.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_malik.cpp' object='delta-algorithm_malik.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-algorithm_malik.obj `if test -f 'algorithm_malik.cpp'; then $(CYGPATH_W) 'algorithm_malik.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_malik.cpp'; fi`

delta-algorithm_MxM.o: algorithm_MxM.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-algorithm_MxM.o -MD -MP -MF $(DEPDIR)/delta-algorithm_MxM.Tpo -c -o delta-algorithm_MxM.o `test -f 'algorithm_MxM.cpp' || echo '$(srcdir)/'`algorithm_MxM.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-algorithm_MxM.Tpo $(DEPDIR)/delta-algorithm_MxM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_MxM.cpp' object='delta-algorithm_MxM.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-algorithm_MxM.o `test -f 'algorithm_MxM.cpp' || echo '$(srcdir)/'`algorithm_MxM.cpp

delta-algorithm_MxM.obj: algorithm_MxM.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-algorithm_MxM.obj -MD -MP -MF $(DEPDIR)/delta-algorithm_MxM.Tpo -c -o delta-algorithm_MxM.obj `if test -f 'algorithm_MxM.cpp'; then $(CYGPATH_W) 'algorithm_MxM.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_MxM.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-algorithm_MxM.Tpo $(DEPDIR)/delta-algorithm_MxM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_MxM.cpp' object='delta-algorithm_MxM.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-algorithm_MxM.obj `if test -f 'algorithm_MxM.cpp'; then $(CYGPATH_W) 'algorithm_MxM.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_MxM.cpp'; fi`

delta-algorithm_taulop_pbc.o: algorithm_taulop_pbc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-algorithm_taulop_pbc.o -MD -MP -MF $(DEPDIR)/delta-algorithm_taulop_pbc.Tpo -c -o delta-algorithm_taulop_pbc.o `test -f 'algorithm_taulop_pbc.cpp' || echo '$(srcdir)/'`algorithm_taulop_pbc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-algorithm_taulop_pbc.Tpo $(DEPDIR)/delta-algorithm_taulop_pbc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_taulop_pbc.cpp' object='delta-algorithm_taulop_pbc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-algorithm_taulop_pbc.o `test -f 'algorithm_taulop_pbc.cpp' || echo '$(srcdir)/'`algorithm_taulop_pbc.cpp

delta-algorithm_taulop_pbc.obj: algorithm_taulop_pbc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-algorithm_taulop_pbc.obj -MD -MP -MF $(DEPDIR)/delta-algorithm_taulop_pbc.Tpo -c -o delta-algorithm_taulop_pbc.obj `if test -f 'algorithm_taulop_pbc.cpp'; then $(CYGPATH_W) 'algorithm_taulop_pbc.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_taulop_pbc.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-algorithm_taulop_pbc.Tpo $(DEPDIR)/delta-algorithm_taulop_pbc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_taulop_pbc.cpp' object='delta-algorithm_taulop_pbc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-algorithm_taulop_pbc.obj `if test -f 'algorithm_taulop_pbc.cpp'; then $(CYGPATH_W) 'algorithm_taulop_pbc.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_taulop_pbc.cpp'; fi`

delta-algorithm_taulop_pbr.o: algorithm_taulop_pbr.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-algorithm_taulop_pbr.o -MD -MP -MF $(DEPDIR)/delta-algorithm_taulop_pbr.Tpo -c -o delta-algorithm_taulop_pbr.o `test -f 'algorithm_taulop_pbr.cpp' || echo '$(srcdir)/'`algorithm_taulop_pbr.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-algorithm_taulop_pbr.Tpo $(DEPDIR)/delta-algorithm_taulop_pbr.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_taulop_pbr.cpp' object='delta-algorithm_taulop_pbr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-algorithm_taulop_pbr.o `test -f 'algorithm_taulop_pbr.cpp' || echo '$(srcdir)/'`algorithm_taulop_pbr.cpp

delta-algorithm_taulop_pbr.obj: algorithm_taulop_pbr.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-algorithm_taulop_pbr.obj -MD -MP -MF $(DEPDIR)/delta-algorithm_taulop_pbr.Tpo -c -o delta-algorithm_taulop_pbr.obj `if test -f 'algorithm_taulop_pbr.cpp'; then $(CYGPATH_W) 'algorithm_taulop_pbr.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_taulop_pbr.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-algorithm_taulop_pbr.Tpo $(DEPDIR)/delta-algorithm_taulop_pbr.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_taulop_pbr.cpp' object='delta-algorithm_taulop_pbr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-algorithm_taulop_pbr.obj `if test -f 'algorithm_taulop_pbr.cpp'; then $(CYGPATH_W) 'algorithm_taulop_pbr.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_taulop_pbr.cpp'; fi`

delta-algorithm_W1D.o: algorithm_W1D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-algorithm_W1D.o -MD -MP -MF $(DEPDIR)/delta-algorithm_W1D.Tpo -c -o delta-algorithm_W1D.o `test -f 'algorithm_W1D.cpp' || echo '$(srcdir)/'`algorithm_W1D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-algorithm_W1D.Tpo $(DEPDIR)/delta-algorithm_W1D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_W1D.cpp' object='delta-algorithm_W1D.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-algorithm_W1D.o `test -f 'algorithm_W1D.cpp' || echo '$(srcdir)/'`algorithm_W1D.cpp

delta-algorithm_W1D.obj: algorithm_W1D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-algorithm_W1D.obj -MD -MP -MF $(DEPDIR)/delta-algorithm_W1D.Tpo -c -o delta-algorithm_W1D.obj `if test -f 'algorithm_W1D.cpp'; then $(CYGPATH_W) 'algorithm_W1D.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_W1D.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-algorithm_W1D.Tpo $(DEPDIR)/delta-algorithm_W1D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_W1D.cpp' object='delta-algorithm_W1D.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-algorithm_W1D.obj `if test -f 'algorithm_W1D.cpp'; then $(CYGPATH_W) 'algorithm_W1D.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_W1D.cpp'; fi`

delta-algorithm_W2D.o: algorithm_W2D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-algorithm_W2D.o -MD -MP -MF $(DEPDIR)/delta-algorithm_W2D.Tpo -c -o delta-algorithm_W2D.o `test -f 'algorithm_W2D.cpp' || echo '$(srcdir)/'`algorithm_W2D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-algorithm_W2D.Tpo $(DEPDIR)/delta-algorithm_W2D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_W2D.cpp' object='delta-algorithm_W2D.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-algorithm_W2D.o `test -f 'algorithm_W2D.cpp' || echo '$(srcdir)/'`algorithm_W2D.cpp

delta-algorithm_W2D.obj: algorithm_W2D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-algorithm_W2D.obj -MD -MP -MF $(DEPDIR)/delta-algorithm_W2D.Tpo -c -o delta-algorithm_W2D.obj `if test -f 'algorithm_W2D.cpp'; then $(CYGPATH_W) 'algorithm_W2D.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_W2D.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-algorithm_W2D.Tpo $(DEPDIR)/delta-algorithm_W2D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_W2D.cpp' object='delta-algorithm_W2D.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-algorithm_W2D.obj `if test -f 'algorithm_W2D.cpp'; then $(CYGPATH_W) 'algorithm_W2D.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_W2D.cpp'; fi`

delta-arrangement.o: arrangement.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-arrangement.o -MD -MP -MF $(DEPDIR)/delta-arrangement.Tpo -c -o delta-arrangement.o `test -f 'arrangement.cpp' || echo '$(srcdir)/'`arrangement.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-arrangement.Tpo $(DEPDIR)/delta-arrangement.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='arrangement.cpp' object='delta-arrangement.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-arrangement.o `test -f 'arrangement.cpp' || echo '$(srcdir)/'`arrangement.cpp

delta-arrangement.obj: arrangement.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-arrangement.obj -MD -MP -MF $(DEPDIR)/delta-arrangement.Tpo -c -o delta-arrangement.obj `if test -f 'arrangement.cpp'; then $(CYGPATH_W) 'arrangement.cpp'; else $(CYGPATH_W) '$(srcdir)/arrangement.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-arrangement.Tpo $(DEPDIR)/delta-arrangement.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='arrangement.cpp' object='delta-arrangement.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-arrangement.obj `if test -f 'arrangement.cpp'; then $(CYGPATH_W) 'arrangement.cpp'; else $(CYGPATH_W) '$(srcdir)/arrangement.cpp'; fi`

delta-column.o: column.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-column.o -MD -MP -MF $(DEPDIR)/delta-column.Tpo -c -o delta-column.o `test -f 'column.cpp' || echo '$(srcdir)/'`column.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-column.Tpo $(DEPDIR)/delta-column.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='column.cpp' object='delta-column.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-column.o `test -f 'column.cpp' || echo '$(srcdir)/'`column.cpp

delta-column.obj: column.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-column.obj -MD -MP -MF $(DEPDIR)/delta-column.Tpo -c -o delta-column.obj `if test -f 'column.cpp'; then $(CYGPATH_W) 'column.cpp'; else $(CYGPATH_W) '$(srcdir)/column.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-column.Tpo $(DEPDIR)/delta-column.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='column.cpp' object='delta-column.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-column.obj `if test -f 'column.cpp'; then $(CYGPATH_W) 'column.cpp'; else $(CYGPATH_W) '$(srcdir)/column.cpp'; fi`

delta-cost.o: cost.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-cost.o -MD -MP -MF $(DEPDIR)/delta-cost.Tpo -c -o delta-cost.o `test -f 'cost.cpp' || echo '$(srcdir)/'`cost.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-cost.Tpo $(DEPDIR)/delta-cost.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cost.cpp' object='delta-cost.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-cost.o `test -f 'cost.cpp' || echo '$(srcdir)/'`cost.cpp

delta-cost.obj: cost.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-cost.obj -MD -MP -MF $(DEPDIR)/delta-cost.Tpo -c -o delta-cost.obj `if test -f 'cost.cpp'; then $(CYGPATH_W) 'cost.cpp'; else $(CYGPATH_W) '$(srcdir)/cost.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-cost.Tpo $(DEPDIR)/delta-cost.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cost.cpp' object='delta-cost.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-cost.obj `if test -f 'cost.cpp'; then $(CYGPATH_W) 'cost.cpp'; else $(CYGPATH_W) '$(srcdir)/cost.cpp'; fi`

delta-heuristic_beaumont.o: heuristic_beaumont.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-heuristic_beaumont.o -MD -MP -MF $(DEPDIR)/delta-heuristic_beaumont.Tpo -c -o delta-heuristic_beaumont.o `test -f 'heuristic_beaumont.cpp' || echo '$(srcdir)/'`heuristic_beaumont.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-heuristic_beaumont.Tpo $(DEPDIR)/delta-heuristic_beaumont.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heuristic_beaumont.cpp' object='delta-heuristic_beaumont.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-heuristic_beaumont.o `test -f 'heuristic_beaumont.cpp' || echo '$(srcdir)/'`heuristic_beaumont.cpp

delta-heuristic_beaumont.obj: heuristic_beaumont.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-heuristic_beaumont.obj -MD -MP -MF $(DEPDIR)/delta-heuristic_beaumont.Tpo -c -o delta-heuristic_beaumont.obj `if test -f 'heuristic_beaumont.cpp'; then $(CYGPATH_W) 'heuristic_beaumont.cpp'; else $(CYGPATH_W) '$(srcdir)/heuristic_beaumont.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-heuristic_beaumont.Tpo $(DEPDIR)/delta-heuristic_beaumont.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heuristic_beaumont.cpp' object='delta-heuristic_beaumont.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-heuristic_beaumont.obj `if test -f 'heuristic_beaumont.cpp'; then $(CYGPATH_W) 'heuristic_beaumont.cpp'; else $(CYGPATH_W) '$(srcdir)/heuristic_beaumont.cpp'; fi`

delta-heuristic_malik.o: heuristic_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-heuristic_malik.o -MD -MP -MF $(DEPDIR)/delta-heuristic_malik.Tpo -c -o delta-heuristic_malik.o `test -f 'heuristic_malik.cpp' || echo '$(srcdir)/'`heuristic_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-heuristic_malik.Tpo $(DEPDIR)/delta-heuristic_malik.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heuristic_malik.cpp' object='delta-heuristic_malik.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-heuristic_malik.o `test -f 'heuristic_malik.cpp' || echo '$(srcdir)/'`heuristic_malik.cpp

delta-heuristic_malik.obj: heuristic_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-heuristic_malik.obj -MD -MP -MF $(DEPDIR)/delta-heuristic_malik.Tpo -c -o delta-heuristic_malik.obj `if test -f 'heuristic_malik.cpp'; then $(CYGPATH_W) 'heuristic_malik.cpp'; else $(CYGPATH_W) '$(srcdir)/heuristic_malik.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-heuristic_malik.Tpo $(DEPDIR)/delta-heuristic_malik.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heuristic_malik.cpp' object='delta-heuristic_malik.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-heuristic_malik.obj `if test -f 'heuristic_malik.cpp'; then $(CYGPATH_W) 'heuristic_malik.cpp'; else $(CYGPATH_W) '$(srcdir)/heuristic_malik.cpp'; fi`

delta-heuristic.o: heuristic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-heuristic.o -MD -MP -MF $(DEPDIR)/delta-heuristic.Tpo -c -o delta-heuristic.o `test -f 'heuristic.cpp' || echo '$(srcdir)/'`heuristic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-heuristic.Tpo $(DEPDIR)/delta-heuristic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heuristic.cpp' object='delta-heuristic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-heuristic.o `test -f 'heuristic.cpp' || echo '$(srcdir)/'`heuristic.cpp

delta-heuristic.obj: heuristic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-heuristic.obj -MD -MP -MF $(DEPDIR)/delta-heuristic.Tpo -c -o delta-heuristic.obj `if test -f 'heuristic.cpp'; then $(CYGPATH_W) 'heuristic.cpp'; else $(CYGPATH_W) '$(srcdir)/heuristic.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-heuristic.Tpo $(DEPDIR)/delta-heuristic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heuristic.cpp' object='delta-heuristic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-heuristic.obj `if test -f 'heuristic.cpp'; then $(CYGPATH_W) 'heuristic.cpp'; else $(CYGPATH_W) '$(srcdir)/heuristic.cpp'; fi`

delta-matrix.o: matrix.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-matrix.o -MD -MP -MF $(DEPDIR)/delta-matrix.Tpo -c -o delta-matrix.o `test -f 'matrix.cpp' || echo '$(srcdir)/'`matrix.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-matrix.Tpo $(DEPDIR)/delta-matrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='matrix.cpp' object='delta-matrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-matrix.o `test -f 'matrix.cpp' || echo '$(srcdir)/'`matrix.cpp

delta-matrix.obj: matrix.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-matrix.obj -MD -MP -MF $(DEPDIR)/delta-matrix.Tpo -c -o delta-matrix.obj `if test -f 'matrix.cpp'; then $(CYGPATH_W) 'matrix.cpp'; else $(CYGPATH_W) '$(srcdir)/matrix.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-matrix.Tpo $(DEPDIR)/delta-matrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='matrix.cpp' object='delta-matrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-matrix.obj `if test -f 'matrix.cpp'; then $(CYGPATH_W) 'matrix.cpp'; else $(CYGPATH_W) '$(srcdir)/matrix.cpp'; fi`

delta-rectangle.o: rectangle.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-rectangle.o -MD -MP -MF $(DEPDIR)/delta-rectangle.Tpo -c -o delta-rectangle.o `test -f 'rectangle.cpp' || echo '$(srcdir)/'`rectangle.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-rectangle.Tpo $(DEPDIR)/delta-rectangle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rectangle.cpp' object='delta-rectangle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-rectangle.o `test -f 'rectangle.cpp' || echo '$(srcdir)/'`rectangle.cpp

delta-rectangle.obj: rectangle.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -MT delta-rectangle.obj -MD -MP -MF $(DEPDIR)/delta-rectangle.Tpo -c -o delta-rectangle.obj `if test -f 'rectangle.cpp'; then $(CYGPATH_W) 'rectangle.cpp'; else $(CYGPATH_W) '$(srcdir)/rectangle.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/delta-rectangle.Tpo $(DEPDIR)/delta-rectangle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rectangle.cpp' object='delta-rectangle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(delta_CXXFLAGS) $(CXXFLAGS) -c -o delta-rectangle.obj `if test -f 'rectangle.cpp'; then $(CYGPATH_W) 'rectangle.cpp'; else $(CYGPATH_W) '$(srcdir)/rectangle.cpp'; fi`

malik-main_malik.o: main_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-main_malik.o -MD -MP -MF $(DEPDIR)/malik-main_malik.Tpo -c -o malik-main_malik.o `test -f 'main_malik.cpp' || echo '$(srcdir)/'`main_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-main_malik.Tpo $(DEPDIR)/malik-main_malik.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='main_malik.cpp' object='malik-main_malik.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-main_malik.o `test -f 'main_malik.cpp' || echo '$(srcdir)/'`main_malik.cpp

malik-main_malik.obj: main_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-main_malik.obj -MD -MP -MF $(DEPDIR)/malik-main_malik.Tpo -c -o malik-main_malik.obj `if test -f 'main_malik.cpp'; then $(CYGPATH_W) 'main_malik.cpp'; else $(CYGPATH_W) '$(srcdir)/main_malik.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-main_malik.Tpo $(DEPDIR)/malik-main_malik.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='main_malik.cpp' object='malik-main_malik.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-main_malik.obj `if test -f 'main_malik.cpp'; then $(CYGPATH_W) 'main_malik.cpp'; else $(CYGPATH_W) '$(srcdir)/main_malik.cpp'; fi`

malik-algorithm.o: algorithm.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-algorithm.o -MD -MP -MF $(DEPDIR)/malik-algorithm.Tpo -c -o malik-algorithm.o `test -f 'algorithm.cpp' || echo '$(srcdir)/'`algorithm.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-algorithm.Tpo $(DEPDIR)/malik-algorithm.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm.cpp' object='malik-algorithm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-algorithm.o `test -f 'algorithm.cpp' || echo '$(srcdir)/'`algorithm.cpp

malik-algorithm.obj: algorithm.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-algorithm.obj -MD -MP -MF $(DEPDIR)/malik-algorithm.Tpo -c -o malik-algorithm.obj `if test -f 'algorithm.cpp'; then $(CYGPATH_W) 'algorithm.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-algorithm.Tpo $(DEPDIR)/malik-algorithm.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm.cpp' object='malik-algorithm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-algorithm.obj `if test -f 'algorithm.cpp'; then $(CYGPATH_W) 'algorithm.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm.cpp'; fi`

malik-algorithm_basic.o: algorithm_basic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-algorithm_basic.o -MD -MP -MF $(DEPDIR)/malik-algorithm_basic.Tpo -c -o malik-algorithm_basic.o `test -f 'algorithm_basic.cpp' || echo '$(srcdir)/'`algorithm_basic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-algorithm_basic.Tpo $(DEPDIR)/malik-algorithm_basic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_basic.cpp' object='malik-algorithm_basic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-algorithm_basic.o `test -f 'algorithm_basic.cpp' || echo '$(srcdir)/'`algorithm_basic.cpp

malik-algorithm_basic.obj: algorithm_basic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-algorithm_basic.obj -MD -MP -MF $(DEPDIR)/malik-algorithm_basic.Tpo -c -o malik-algorithm_basic.obj `if test -f 'algorithm_basic.cpp'; then $(CYGPATH_W) 'algorithm_basic.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_basic.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-algorithm_basic.Tpo $(DEPDIR)/malik-algorithm_basic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_basic.cpp' object='malik-algorithm_basic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-algorithm_basic.obj `if test -f 'algorithm_basic.cpp'; then $(CYGPATH_W) 'algorithm_basic.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_basic.cpp'; fi`

malik-algorithm_malik.o: algorithm_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-algorithm_malik.o -MD -MP -MF $(DEPDIR)/malik-algorithm_malik.Tpo -c -o malik-algorithm_malik.o `test -f 'algorithm_malik.cpp' || echo '$(srcdir)/'`algorithm_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-algorithm_malik.Tpo $(DEPDIR)/malik-algorithm_malik.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_malik.cpp' object='malik-algorithm_malik.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-algorithm_malik.o `test -f 'algorithm_malik.cpp' || echo '$(srcdir)/'`algorithm_malik.cpp

malik-algorithm_malik.obj: algorithm_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-algorithm_malik.obj -MD -MP -MF $(DEPDIR)/malik-algorithm_malik.Tpo -c -o malik-algorithm_malik.obj `if test -f 'algorithm_malik.cpp'; then $(CYGPATH_W) 'algorithm_malik.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_malik.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-algorithm_malik.Tpo $(DEPDIR)/malik-algorithm_malik.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_malik.cpp' object='malik-algorithm_malik.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-algorithm_malik.obj `if test -f 'algorithm_malik.cpp'; then $(CYGPATH_W) 'algorithm_malik.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_malik.cpp'; fi`

malik-algorithm_MxM.o: algorithm_MxM.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-algorithm_MxM.o -MD -MP -MF $(DEPDIR)/malik-algorithm_MxM.Tpo -c -o malik-algorithm_MxM.o `test -f 'algorithm_MxM.cpp' || echo '$(srcdir)/'`algorithm_MxM.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-algorithm_MxM.Tpo $(DEPDIR)/malik-algorithm_MxM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_MxM.cpp' object='malik-algorithm_MxM.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-algorithm_MxM.o `test -f 'algorithm_MxM.cpp' || echo '$(srcdir)/'`algorithm_MxM.cpp

malik-algorithm_MxM.obj: algorithm_MxM.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-algorithm_MxM.obj -MD -MP -MF $(DEPDIR)/malik-algorithm_MxM.Tpo -c -o malik-algorithm_MxM.obj `if test -f 'algorithm_MxM.cpp'; then $(CYGPATH_W) 'algorithm_MxM.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_MxM.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-algorithm_MxM.Tpo $(DEPDIR)/malik-algorithm_MxM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_MxM.cpp' object='malik-algorithm_MxM.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-algorithm_MxM.obj `if test -f 'algorithm_MxM.cpp'; then $(CYGPATH_W) 'algorithm_MxM.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_MxM.cpp'; fi`

malik-algorithm_taulop_pbc.o: algorithm_taulop_pbc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-algorithm_taulop_pbc.o -MD -MP -MF $(DEPDIR)/malik-algorithm_taulop_pbc.Tpo -c -o malik-algorithm_taulop_pbc.o `test -f 'algorithm_taulop_pbc.cpp' || echo '$(srcdir)/'`algorithm_taulop_pbc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-algorithm_taulop_pbc.Tpo $(DEPDIR)/malik-algorithm_taulop_pbc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_taulop_pbc.cpp' object='malik-algorithm_taulop_pbc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-algorithm_taulop_pbc.o `test -f 'algorithm_taulop_pbc.cpp' || echo '$(srcdir)/'`algorithm_taulop_pbc.cpp

malik-algorithm_taulop_pbc.obj: algorithm_taulop_pbc.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-algorithm_taulop_pbc.obj -MD -MP -MF $(DEPDIR)/malik-algorithm_taulop_pbc.Tpo -c -o malik-algorithm_taulop_pbc.obj `if test -f 'algorithm_taulop_pbc.cpp'; then $(CYGPATH_W) 'algorithm_taulop_pbc.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_taulop_pbc.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-algorithm_taulop_pbc.Tpo $(DEPDIR)/malik-algorithm_taulop_pbc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_taulop_pbc.cpp' object='malik-algorithm_taulop_pbc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-algorithm_taulop_pbc.obj `if test -f 'algorithm_taulop_pbc.cpp'; then $(CYGPATH_W) 'algorithm_taulop_pbc.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_taulop_pbc.cpp'; fi`

malik-algorithm_taulop_pbr.o: algorithm_taulop_pbr.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-algorithm_taulop_pbr.o -MD -MP -MF $(DEPDIR)/malik-algorithm_taulop_pbr.Tpo -c -o malik-algorithm_taulop_pbr.o `test -f 'algorithm_taulop_pbr.cpp' || echo '$(srcdir)/'`algorithm_taulop_pbr.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-algorithm_taulop_pbr.Tpo $(DEPDIR)/malik-algorithm_taulop_pbr.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_taulop_pbr.cpp' object='malik-algorithm_taulop_pbr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-algorithm_taulop_pbr.o `test -f 'algorithm_taulop_pbr.cpp' || echo '$(srcdir)/'`algorithm_taulop_pbr.cpp

malik-algorithm_taulop_pbr.obj: algorithm_taulop_pbr.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-algorithm_taulop_pbr.obj -MD -MP -MF $(DEPDIR)/malik-algorithm_taulop_pbr.Tpo -c -o malik-algorithm_taulop_pbr.obj `if test -f 'algorithm_taulop_pbr.cpp'; then $(CYGPATH_W) 'algorithm_taulop_pbr.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_taulop_pbr.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-algorithm_taulop_pbr.Tpo $(DEPDIR)/malik-algorithm_taulop_pbr.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_taulop_pbr.cpp' object='malik-algorithm_taulop_pbr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-algorithm_taulop_pbr.obj `if test -f 'algorithm_taulop_pbr.cpp'; then $(CYGPATH_W) 'algorithm_taulop_pbr.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_taulop_pbr.cpp'; fi`

malik-algorithm_W1D.o: algorithm_W1D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-algorithm_W1D.o -MD -MP -MF $(DEPDIR)/malik-algorithm_W1D.Tpo -c -o malik-algorithm_W1D.o `test -f 'algorithm_W1D.cpp' || echo '$(srcdir)/'`algorithm_W1D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-algorithm_W1D.Tpo $(DEPDIR)/malik-algorithm_W1D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_W1D.cpp' object='malik-algorithm_W1D.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-algorithm_W1D.o `test -f 'algorithm_W1D.cpp' || echo '$(srcdir)/'`algorithm_W1D.cpp

malik-algorithm_W1D.obj: algorithm_W1D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-algorithm_W1D.obj -MD -MP -MF $(DEPDIR)/malik-algorithm_W1D.Tpo -c -o malik-algorithm_W1D.obj `if test -f 'algorithm_W1D.cpp'; then $(CYGPATH_W) 'algorithm_W1D.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_W1D.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-algorithm_W1D.Tpo $(DEPDIR)/malik-algorithm_W1D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_W1D.cpp' object='malik-algorithm_W1D.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-algorithm_W1D.obj `if test -f 'algorithm_W1D.cpp'; then $(CYGPATH_W) 'algorithm_W1D.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_W1D.cpp'; fi`

malik-algorithm_W2D.o: algorithm_W2D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-algorithm_W2D.o -MD -MP -MF $(DEPDIR)/malik-algorithm_W2D.Tpo -c -o malik-algorithm_W2D.o `test -f 'algorithm_W2D.cpp' || echo '$(srcdir)/'`algorithm_W2D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-algorithm_W2D.Tpo $(DEPDIR)/malik-algorithm_W2D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_W2D.cpp' object='malik-algorithm_W2D.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-algorithm_W2D.o `test -f 'algorithm_W2D.cpp' || echo '$(srcdir)/'`algorithm_W2D.cpp

malik-algorithm_W2D.obj: algorithm_W2D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-algorithm_W2D.obj -MD -MP -MF $(DEPDIR)/malik-algorithm_W2D.Tpo -c -o malik-algorithm_W2D.obj `if test -f 'algorithm_W2D.cpp'; then $(CYGPATH_W) 'algorithm_W2D.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_W2D.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-algorithm_W2D.Tpo $(DEPDIR)/malik-algorithm_W2D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='algorithm_W2D.cpp' object='malik-algorithm_W2D.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-algorithm_W2D.obj `if test -f 'algorithm_W2D.cpp'; then $(CYGPATH_W) 'algorithm_W2D.cpp'; else $(CYGPATH_W) '$(srcdir)/algorithm_W2D.cpp'; fi`

malik-arrangement.o: arrangement.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-arrangement.o -MD -MP -MF $(DEPDIR)/malik-arrangement.Tpo -c -o malik-arrangement.o `test -f 'arrangement.cpp' || echo '$(srcdir)/'`arrangement.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-arrangement.Tpo $(DEPDIR)/malik-arrangement.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='arrangement.cpp' object='malik-arrangement.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-arrangement.o `test -f 'arrangement.cpp' || echo '$(srcdir)/'`arrangement.cpp

malik-arrangement.obj: arrangement.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-arrangement.obj -MD -MP -MF $(DEPDIR)/malik-arrangement.Tpo -c -o malik-arrangement.obj `if test -f 'arrangement.cpp'; then $(CYGPATH_W) 'arrangement.cpp'; else $(CYGPATH_W) '$(srcdir)/arrangement.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-arrangement.Tpo $(DEPDIR)/malik-arrangement.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='arrangement.cpp' object='malik-arrangement.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-arrangement.obj `if test -f 'arrangement.cpp'; then $(CYGPATH_W) 'arrangement.cpp'; else $(CYGPATH_W) '$(srcdir)/arrangement.cpp'; fi`

malik-column.o: column.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-column.o -MD -MP -MF $(DEPDIR)/malik-column.Tpo -c -o malik-column.o `test -f 'column.cpp' || echo '$(srcdir)/'`column.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-column.Tpo $(DEPDIR)/malik-column.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='column.cpp' object='malik-column.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-column.o `test -f 'column.cpp' || echo '$(srcdir)/'`column.cpp

malik-column.obj: column.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-column.obj -MD -MP -MF $(DEPDIR)/malik-column.Tpo -c -o malik-column.obj `if test -f 'column.cpp'; then $(CYGPATH_W) 'column.cpp'; else $(CYGPATH_W) '$(srcdir)/column.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-column.Tpo $(DEPDIR)/malik-column.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='column.cpp' object='malik-column.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-column.obj `if test -f 'column.cpp'; then $(CYGPATH_W) 'column.cpp'; else $(CYGPATH_W) '$(srcdir)/column.cpp'; fi`

malik-cost.o: cost.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-cost.o -MD -MP -MF $(DEPDIR)/malik-cost.Tpo -c -o malik-cost.o `test -f 'cost.cpp' || echo '$(srcdir)/'`cost.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-cost.Tpo $(DEPDIR)/malik-cost.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cost.cpp' object='malik-cost.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-cost.o `test -f 'cost.cpp' || echo '$(srcdir)/'`cost.cpp

malik-cost.obj: cost.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-cost.obj -MD -MP -MF $(DEPDIR)/malik-cost.Tpo -c -o malik-cost.obj `if test -f 'cost.cpp'; then $(CYGPATH_W) 'cost.cpp'; else $(CYGPATH_W) '$(srcdir)/cost.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-cost.Tpo $(DEPDIR)/malik-cost.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cost.cpp' object='malik-cost.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-cost.obj `if test -f 'cost.cpp'; then $(CYGPATH_W) 'cost.cpp'; else $(CYGPATH_W) '$(srcdir)/cost.cpp'; fi`

malik-heuristic_beaumont.o: heuristic_beaumont.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-heuristic_beaumont.o -MD -MP -MF $(DEPDIR)/malik-heuristic_beaumont.Tpo -c -o malik-heuristic_beaumont.o `test -f 'heuristic_beaumont.cpp' || echo '$(srcdir)/'`heuristic_beaumont.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-heuristic_beaumont.Tpo $(DEPDIR)/malik-heuristic_beaumont.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heuristic_beaumont.cpp' object='malik-heuristic_beaumont.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-heuristic_beaumont.o `test -f 'heuristic_beaumont.cpp' || echo '$(srcdir)/'`heuristic_beaumont.cpp

malik-heuristic_beaumont.obj: heuristic_beaumont.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-heuristic_beaumont.obj -MD -MP -MF $(DEPDIR)/malik-heuristic_beaumont.Tpo -c -o malik-heuristic_beaumont.obj `if test -f 'heuristic_beaumont.cpp'; then $(CYGPATH_W) 'heuristic_beaumont.cpp'; else $(CYGPATH_W) '$(srcdir)/heuristic_beaumont.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-heuristic_beaumont.Tpo $(DEPDIR)/malik-heuristic_beaumont.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heuristic_beaumont.cpp' object='malik-heuristic_beaumont.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-heuristic_beaumont.obj `if test -f 'heuristic_beaumont.cpp'; then $(CYGPATH_W) 'heuristic_beaumont.cpp'; else $(CYGPATH_W) '$(srcdir)/heuristic_beaumont.cpp'; fi`

malik-heuristic_malik.o: heuristic_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-heuristic_malik.o -MD -MP -MF $(DEPDIR)/malik-heuristic_malik.Tpo -c -o malik-heuristic_malik.o `test -f 'heuristic_malik.cpp' || echo '$(srcdir)/'`heuristic_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-heuristic_malik.Tpo $(DEPDIR)/malik-heuristic_malik.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heuristic_malik.cpp' object='malik-heuristic_malik.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-heuristic_malik.o `test -f 'heuristic_malik.cpp' || echo '$(srcdir)/'`heuristic_malik.cpp

malik-heuristic_malik.obj: heuristic_malik.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-heuristic_malik.obj -MD -MP -MF $(DEPDIR)/malik-heuristic_malik.Tpo -c -o malik-heuristic_malik.obj `if test -f 'heuristic_malik.cpp'; then $(CYGPATH_W) 'heuristic_malik.cpp'; else $(CYGPATH_W) '$(srcdir)/heuristic_malik.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-heuristic_malik.Tpo $(DEPDIR)/malik-heuristic_malik.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heuristic_malik.cpp' object='malik-heuristic_malik.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-heuristic_malik.obj `if test -f 'heuristic_malik.cpp'; then $(CYGPATH_W) 'heuristic_malik.cpp'; else $(CYGPATH_W) '$(srcdir)/heuristic_malik.cpp'; fi`

malik-heuristic.o: heuristic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-heuristic.o -MD -MP -MF $(DEPDIR)/malik-heuristic.Tpo -c -o malik-heuristic.o `test -f 'heuristic.cpp' || echo '$(srcdir)/'`heuristic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-heuristic.Tpo $(DEPDIR)/malik-heuristic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heuristic.cpp' object='malik-heuristic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-heuristic.o `test -f 'heuristic.cpp' || echo '$(srcdir)/'`heuristic.cpp

malik-heuristic.obj: heuristic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-heuristic.obj -MD -MP -MF $(DEPDIR)/malik-heuristic.Tpo -c -o malik-heuristic.obj `if test -f 'heuristic.cpp'; then $(CYGPATH_W) 'heuristic.cpp'; else $(CYGPATH_W) '$(srcdir)/heuristic.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-heuristic.Tpo $(DEPDIR)/malik-heuristic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heuristic.cpp' object='malik-heuristic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-heuristic.obj `if test -f 'heuristic.cpp'; then $(CYGPATH_W) 'heuristic.cpp'; else $(CYGPATH_W) '$(srcdir)/heuristic.cpp'; fi`

malik-matrix.o: matrix.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-matrix.o -MD -MP -MF $(DEPDIR)/malik-matrix.Tpo -c -o malik-matrix.o `test -f 'matrix.cpp' || echo '$(srcdir)/'`matrix.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-matrix.Tpo $(DEPDIR)/malik-matrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='matrix.cpp' object='malik-matrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-matrix.o `test -f 'matrix.cpp' || echo '$(srcdir)/'`matrix.cpp

malik-matrix.obj: matrix.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-matrix.obj -MD -MP -MF $(DEPDIR)/malik-matrix.Tpo -c -o malik-matrix.obj `if test -f 'matrix.cpp'; then $(CYGPATH_W) 'matrix.cpp'; else $(CYGPATH_W) '$(srcdir)/matrix.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-matrix.Tpo $(DEPDIR)/malik-matrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='matrix.cpp' object='malik-matrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-matrix.obj `if test -f 'matrix.cpp'; then $(CYGPATH_W) 'matrix.cpp'; else $(CYGPATH_W) '$(srcdir)/matrix.cpp'; fi`

malik-rectangle.o: rectangle.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-rectangle.o -MD -MP -MF $(DEPDIR)/malik-rectangle.Tpo -c -o malik-rectangle.o `test -f 'rectangle.cpp' || echo '$(srcdir)/'`rectangle.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-rectangle.Tpo $(DEPDIR)/malik-rectangle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rectangle.cpp' object='malik-rectangle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-rectangle.o `test -f 'rectangle.cpp' || echo '$(srcdir)/'`rectangle.cpp

malik-rectangle.obj: rectangle.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -MT malik-rectangle.obj -MD -MP -MF $(DEPDIR)/malik-rectangle.Tpo -c -o malik-rectangle.obj `if test -f 'rectangle.cpp'; then $(CYGPATH_W) 'rectangle.cpp'; else $(CYGPATH_W) '$(srcdir)/rectangle.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/malik-rectangle.Tpo $(DEPDIR)/malik-rectangle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='rectangle.cpp' object='malik-rectangle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malik_CXXFLAGS) $(CXXFLAGS) -c -o malik-rectangle.obj `if test -f 'rectangle.cpp'; then $(CYGPATH_W) 'rectangle.cpp'; else $(CYGPATH_W) '$(srcdir)/rectangle.cpp'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
